name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            artifact_name: target/x86_64-unknown-linux-gnu/release/awsm-env
            asset_name: awsm-env-x86_64-unknown-linux-gnu
          - os: ubuntu-20.04
            target: aarch64-unknown-linux-gnu
            artifact_name: target/aarch64-unknown-linux-gnu/release/awsm-env
            asset_name: awsm-env-aarch64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: target/x86_64-pc-windows-msvc/release/awsm-env.exe
            asset_name: awsm-env-x86_64-pc-windows-msvc.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: target/x86_64-apple-darwin/release/awsm-env
            asset_name: awsm-env-x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: target/aarch64-apple-darwin/release/awsm-env
            asset_name: awsm-env-aarch64-apple-darwin

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install cross-compilation tools
        if: contains(matrix.target, 'aarch64-unknown-linux-gnu')
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
          use-cross: ${{ contains(matrix.target, 'aarch64-unknown-linux-gnu') }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.artifact_name }}
          if-no-files-found: error

  create_release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Prepare release assets
        run: |
          mkdir -p release-assets
          cp ./awsm-env-x86_64-unknown-linux-gnu/awsm-env release-assets/awsm-env-x86_64-unknown-linux-gnu
          cp ./awsm-env-aarch64-unknown-linux-gnu/awsm-env release-assets/awsm-env-aarch64-unknown-linux-gnu
          cp ./awsm-env-x86_64-pc-windows-msvc.exe/awsm-env.exe release-assets/awsm-env-x86_64-pc-windows-msvc.exe
          cp ./awsm-env-x86_64-apple-darwin/awsm-env release-assets/awsm-env-x86_64-apple-darwin
          cp ./awsm-env-aarch64-apple-darwin/awsm-env release-assets/awsm-env-aarch64-apple-darwin
          chmod +x release-assets/*

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: release-assets/*
